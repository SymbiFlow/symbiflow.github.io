"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var GitHubActivity=function(){var e={},l={renderLink:function(e,t,r){return t=t||e,void 0===r&&(r=""),Mustache.render('<a class="'+r+'" href="{{url}}" target="_blank">{{{title}}}</a>',{url:e,title:t})},renderGitHubLink:function(e,t,r){return l.renderLink("https://github.com/"+e,t=t||e,r=void 0===r?"":r)},getMessageFor:function(r){var e,t,n=r.payload;r.repoLink=l.renderGitHubLink(r.repo.name),r.userGravatar=Mustache.render('<div class="gha-gravatar-user"><img src="{{url}}" class="gha-gravatar-small"></div>',{url:r.actor.avatar_url}),n.ref&&("refs/heads/"===n.ref.substring(0,11)?r.branch=n.ref.substring(11):r.branch=n.ref,r.branchLink=l.renderGitHubLink(r.repo.name+"/tree/"+r.branch,r.branch)+" at "),n.commits&&(t=n.before+"..."+n.head,2===(e=n.commits.length)?r.commitsMessage=Mustache.render('<a href="https://github.com/{{repo}}/compare/{{shaDiff}}">View comparison for these 2 commits &raquo;</a>',{repo:r.repo.name,shaDiff:t}):2<e&&(r.commitsMessage=Mustache.render('<a href="https://github.com/{{repo}}/compare/{{shaDiff}}">{{length}} more '+pluralize("commit",e-2)+" &raquo;</a>",{repo:r.repo.name,shaDiff:t,length:n.size-2})),n.commits.forEach(function(e,t){return 50<e.message.length&&(e.message=e.message.substring(0,50)+"..."),t<2?(e.shaLink=l.renderGitHubLink(r.repo.name+"/commit/"+e.sha,e.sha.substring(0,6),"gha-sha"),void(e.committerGravatar=Mustache.render('<img class="gha-gravatar-commit" src="https://gravatar.com/avatar/{{hash}}?s=30&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="16" />',{hash:md5(e.author.email)}))):(n.commits.splice(2,n.size),!1)})),n.issue&&(a=r.repo.name+"#"+n.issue.number,r.issueLink=l.renderLink(n.issue.html_url,a),r.issueType="issue",n.issue.pull_request&&(r.issueType="pull request")),n.pull_request&&(t=n.pull_request,r.pullRequestLink=l.renderLink(t.html_url,r.repo.name+"#"+t.number),r.mergeMessage="",n.pull_request.merged&&(n.action="merged",i="{{c}} "+pluralize("commit",t.commits)+" with {{a}} "+pluralize("addition",t.additions)+" and {{d}} "+pluralize("deletion",t.deletions),r.mergeMessage=Mustache.render('<br><small class="gha-message-merge">'+i+"</small>",{c:t.commits,a:t.additions,d:t.deletions}))),n.comment&&n.comment.pull_request_url&&(a=r.repo.name+"#"+n.comment.pull_request_url.split("/").pop(),r.pullRequestLink=l.renderLink(n.comment.html_url,a)),n.comment&&n.comment.body&&(r.comment=n.comment.body,150<r.comment.length&&(r.comment=r.comment.substring(0,150)+"..."),n.comment.html_url&&n.comment.commit_id&&(a=r.repo.name+"@"+n.comment.commit_id.substring(0,10),r.commentLink=l.renderLink(n.comment.html_url,a))),"ReleaseEvent"===r.type&&(r.tagLink=l.renderLink(n.release.html_url,n.release.tag_name),r.zipLink=l.renderLink(n.release.zipball_url,"Download Source Code (zip)")),"GollumEvent"===r.type&&(s=n.pages[0],r.actionType=s.action,r.message=r.actionType.charAt(0).toUpperCase()+r.actionType.slice(1)+" ",r.message+=l.renderGitHubLink(s.html_url,s.title)),"FollowEvent"===r.type&&(r.targetLink=l.renderGitHubLink(n.target.login)),"ForkEvent"===r.type&&(r.forkLink=l.renderGitHubLink(n.forkee.full_name)),"MemberEvent"===r.type&&(r.memberLink=l.renderGitHubLink(n.member.login)),n.gist&&(r.actionType="fork"===n.action?n.action+"ed":n.action+"d",r.gistLink=l.renderLink(n.gist.html_url,"gist: "+n.gist.id));var i=Mustache.render(templates[r.type],r),a=millisecondsToStr(new Date-new Date(r.created_at)),s="CreateEvent"==r.type&&0<=["repository","branch","tag"].indexOf(n.ref_type)?icons[r.type+"_"+n.ref_type]:icons[r.type],a={message:i,icon:s,timeString:a,userLink:l.renderGitHubLink(r.actor.login)};return-1<singleLineActivities.indexOf(r.type)?Mustache.render(templates.SingleLineActivity,a):Mustache.render(templates.Activity,a)},getHeaderHTML:function(e){return e.name?e.userNameLink=l.renderLink(e.html_url,e.name+" GitHub"):e.withoutName=" without-name",e.userLink=l.renderLink(e.html_url,e.login),e.gravatarLink=l.renderLink(e.html_url,'<img src="'+e.avatar_url+'">'),Mustache.render(templates.UserHeader,e)},getActivityHTML:function(e,t){var r="",n=e.length;if(0===(t=(t=t&&n<t?n:t)||n))return Mustache.render(templates.NoActivity,{});for(var i=0;i<t;i++)r+=l.getMessageFor(e[i]);return r},getOutputFromRequest:function(t,r){var n=new XMLHttpRequest;n.open("GET",t),n.setRequestHeader("Accept","application/vnd.github.v3+json"),n.onreadystatechange=function(){var e;4===n.readyState&&(200<=n.status&&n.status<300?(e=JSON.parse(n.responseText),r(void 0,e)):r("request for "+t+" yielded status "+n.status))},n.onerror=function(){r("An error occurred connecting to "+t)},n.send()},renderStream:function(e,t){t.innerHTML=Mustache.render(templates.Stream,{text:e,footer:templates.Footer}),t.style.position="relative"},writeOutput:function(e,t){var r="#"===e.charAt(0)?document.getElementById(e.substring(1)):document.getElementsByClassName(e.substring(1));if(r instanceof HTMLCollection)for(var n=0;n<r.length;n++)l.renderStream(t,r[n]);else l.renderStream(t,r)},renderIfReady:function(e,t,r){t&&r&&l.writeOutput(e,t+r)}};return e.feed=function(r){if(!r.username||!r.selector)throw"You must specify the username and selector options for the activity stream.";var n,i,e,a=r.selector,t="https://api.github.com/users/"+r.username,s=t+"/events";if(r.repository&&(s="https://api.github.com/repos/"+r.username+"/"+r.repository+"/events"),r.clientId&&r.clientSecret&&(t+=e="?client_id="+r.clientId+"&client_secret="+r.clientSecret,s+=e),r.eventsUrl&&(s=r.eventsUrl),"object"==_typeof(r.templates))for(var o in templates)"string"==typeof r.templates[o]&&(templates[o]=r.templates[o]);l.getOutputFromRequest(t,function(e,t){n=e?Mustache.render(templates.UserNotFound,{username:r.username}):l.getHeaderHTML(t),l.renderIfReady(a,n,i)}),l.getOutputFromRequest(s,function(e,t){i=e?Mustache.render(templates.EventsNotFound,{username:r.username}):(e="undefined"!=r.limit?parseInt(r.limit,10):null,l.getActivityHTML(t,e)),l.renderIfReady(a,n,i)})},e}();function millisecondsToStr(e){function t(e){return 1<e?"s ago":" ago"}var r=Math.floor(e/1e3),e=Math.floor(r/31536e3);if(e)return e+" year"+t(e);e=Math.floor((r%=31536e3)/2592e3);if(e)return e+" month"+t(e);e=Math.floor((r%=2592e3)/86400);if(e)return e+" day"+t(e);e=Math.floor((r%=86400)/3600);if(e)return"about "+e+" hour"+t(e);e=Math.floor((r%=3600)/60);if(e)return e+" minute"+t(e);r%=60;return r?r+" second"+t(r):"just now"}function pluralize(e,t){return 1!==t?e+"s":e}function md5cycle(e,t){var r=ff(r=e[0],a=e[1],i=e[2],n=e[3],t[0],7,-680876936),n=ff(n,r,a,i,t[1],12,-389564586),i=ff(i,n,r,a,t[2],17,606105819),a=ff(a,i,n,r,t[3],22,-1044525330);r=ff(r,a,i,n,t[4],7,-176418897),n=ff(n,r,a,i,t[5],12,1200080426),i=ff(i,n,r,a,t[6],17,-1473231341),a=ff(a,i,n,r,t[7],22,-45705983),r=ff(r,a,i,n,t[8],7,1770035416),n=ff(n,r,a,i,t[9],12,-1958414417),i=ff(i,n,r,a,t[10],17,-42063),a=ff(a,i,n,r,t[11],22,-1990404162),r=ff(r,a,i,n,t[12],7,1804603682),n=ff(n,r,a,i,t[13],12,-40341101),i=ff(i,n,r,a,t[14],17,-1502002290),r=gg(r,a=ff(a,i,n,r,t[15],22,1236535329),i,n,t[1],5,-165796510),n=gg(n,r,a,i,t[6],9,-1069501632),i=gg(i,n,r,a,t[11],14,643717713),a=gg(a,i,n,r,t[0],20,-373897302),r=gg(r,a,i,n,t[5],5,-701558691),n=gg(n,r,a,i,t[10],9,38016083),i=gg(i,n,r,a,t[15],14,-660478335),a=gg(a,i,n,r,t[4],20,-405537848),r=gg(r,a,i,n,t[9],5,568446438),n=gg(n,r,a,i,t[14],9,-1019803690),i=gg(i,n,r,a,t[3],14,-187363961),a=gg(a,i,n,r,t[8],20,1163531501),r=gg(r,a,i,n,t[13],5,-1444681467),n=gg(n,r,a,i,t[2],9,-51403784),i=gg(i,n,r,a,t[7],14,1735328473),r=hh(r,a=gg(a,i,n,r,t[12],20,-1926607734),i,n,t[5],4,-378558),n=hh(n,r,a,i,t[8],11,-2022574463),i=hh(i,n,r,a,t[11],16,1839030562),a=hh(a,i,n,r,t[14],23,-35309556),r=hh(r,a,i,n,t[1],4,-1530992060),n=hh(n,r,a,i,t[4],11,1272893353),i=hh(i,n,r,a,t[7],16,-155497632),a=hh(a,i,n,r,t[10],23,-1094730640),r=hh(r,a,i,n,t[13],4,681279174),n=hh(n,r,a,i,t[0],11,-358537222),i=hh(i,n,r,a,t[3],16,-722521979),a=hh(a,i,n,r,t[6],23,76029189),r=hh(r,a,i,n,t[9],4,-640364487),n=hh(n,r,a,i,t[12],11,-421815835),i=hh(i,n,r,a,t[15],16,530742520),r=ii(r,a=hh(a,i,n,r,t[2],23,-995338651),i,n,t[0],6,-198630844),n=ii(n,r,a,i,t[7],10,1126891415),i=ii(i,n,r,a,t[14],15,-1416354905),a=ii(a,i,n,r,t[5],21,-57434055),r=ii(r,a,i,n,t[12],6,1700485571),n=ii(n,r,a,i,t[3],10,-1894986606),i=ii(i,n,r,a,t[10],15,-1051523),a=ii(a,i,n,r,t[1],21,-2054922799),r=ii(r,a,i,n,t[8],6,1873313359),n=ii(n,r,a,i,t[15],10,-30611744),i=ii(i,n,r,a,t[6],15,-1560198380),a=ii(a,i,n,r,t[13],21,1309151649),r=ii(r,a,i,n,t[4],6,-145523070),n=ii(n,r,a,i,t[11],10,-1120210379),i=ii(i,n,r,a,t[2],15,718787259),a=ii(a,i,n,r,t[9],21,-343485551),e[0]=add32(r,e[0]),e[1]=add32(a,e[1]),e[2]=add32(i,e[2]),e[3]=add32(n,e[3])}function cmn(e,t,r,n,i,a){return t=add32(add32(t,e),add32(n,a)),add32(t<<i|t>>>32-i,r)}function ff(e,t,r,n,i,a,s){return cmn(t&r|~t&n,e,t,i,a,s)}function gg(e,t,r,n,i,a,s){return cmn(t&n|r&~n,e,t,i,a,s)}function hh(e,t,r,n,i,a,s){return cmn(t^r^n,e,t,i,a,s)}function ii(e,t,r,n,i,a,s){return cmn(r^(t|~n),e,t,i,a,s)}function md51(e){for(var t=e.length,r=[1732584193,-271733879,-1732584194,271733878],n=64;n<=e.length;n+=64)md5cycle(r,md5blk(e.substring(n-64,n)));e=e.substring(n-64);var i=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(n=0;n<e.length;n++)i[n>>2]|=e.charCodeAt(n)<<(n%4<<3);if(i[n>>2]|=128<<(n%4<<3),55<n)for(md5cycle(r,i),n=0;n<16;n++)i[n]=0;return i[14]=8*t,md5cycle(r,i),r}function md5blk(e){for(var t=[],r=0;r<64;r+=4)t[r>>2]=e.charCodeAt(r)+(e.charCodeAt(r+1)<<8)+(e.charCodeAt(r+2)<<16)+(e.charCodeAt(r+3)<<24);return t}var _add,hex_chr="0123456789abcdef".split("");function rhex(e){for(var t="",r=0;r<4;r++)t+=hex_chr[e>>8*r+4&15]+hex_chr[e>>8*r&15];return t}function hex(e){for(var t=0;t<e.length;t++)e[t]=rhex(e[t]);return e.join("")}function md5(e){return hex(md51(e))}function add32(e,t){return e+t&4294967295}"5d41402abc4b2a76b9719d911017c592"!=md5("hello")&&(_add=function(e,t){var r=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(r>>16)<<16|65535&r});var templates={Stream:'<div class="gha-feed">{{{text}}}<div class="gha-push-small"></div>{{{footer}}}</div>',Activity:'<div id="{{id}}" class="gha-activity">               <div class="gha-activity-icon"><span class="octicon octicon-{{icon}}"></span></div>               <div class="gha-message"><div class="gha-time">{{{timeString}}}</div>{{{userLink}}} {{{message}}}</div>               <div class="gha-clear"></div>             </div>',SingleLineActivity:'<div class="gha-activity gha-small">                         <div class="gha-activity-icon"><span class="octicon octicon-{{icon}}"></span></div>                         <div class="gha-message"><div class="gha-time">{{{timeString}}}</div>{{{userLink}}} {{{message}}}</div>                         <div class="gha-clear"></div>                       </div>',UserHeader:'<div class="gha-header">                 <div class="gha-github-icon"><span class="octicon octicon-mark-github"></span></div>                 <div class="gha-user-info{{withoutName}}">{{{userNameLink}}}<p>{{{userLink}}}</p></div>                 <div class="gha-gravatar">{{{gravatarLink}}}</div>               </div><div class="gha-push"></div>',Footer:'<div class="gha-footer">Public Activity <a href="https://github.com/caseyscarborough/github-activity" target="_blank">GitHub Activity Stream</a>',NoActivity:'<div class="gha-info">This user does not have any public activity yet.</div>',UserNotFound:'<div class="gha-info">User {{username}} wasn\'t found.</div>',EventsNotFound:'<div class="gha-info">Events for user {{username}} not found.</div>',CommitCommentEvent:"commented on commit {{{commentLink}}}<br>{{{userGravatar}}}<small>{{comment}}</small>",CreateEvent:"created {{payload.ref_type}} {{{branchLink}}}{{{repoLink}}}",DeleteEvent:"deleted {{payload.ref_type}} {{payload.ref}} at {{{repoLink}}}",FollowEvent:"started following {{{targetLink}}}",ForkEvent:"forked {{{repoLink}}} to {{{forkLink}}}",GistEvent:"{{actionType}} {{{gistLink}}}",GollumEvent:"{{actionType}} the {{{repoLink}}} wiki<br>{{{userGravatar}}}<small>{{{message}}}</small>",IssueCommentEvent:"commented on {{issueType}} {{{issueLink}}}<br>{{{userGravatar}}}<small>{{comment}}</small>",IssuesEvent:"{{payload.action}} issue {{{issueLink}}}<br>{{{userGravatar}}}<small>{{payload.issue.title}}</small>",MemberEvent:"added {{{memberLink}}} to {{{repoLink}}}",PublicEvent:"open sourced {{{repoLink}}}",PullRequestEvent:"{{payload.action}} pull request {{{pullRequestLink}}}<br>{{{userGravatar}}}<small>{{payload.pull_request.title}}</small>{{{mergeMessage}}}",PullRequestReviewCommentEvent:"commented on pull request {{{pullRequestLink}}}<br>{{{userGravatar}}}<small>{{comment}}</small>",PushEvent:'pushed to {{{branchLink}}}{{{repoLink}}}<br>                <ul class="gha-commits">{{#payload.commits}}<li><small>{{{committerGravatar}}} {{{shaLink}}} {{message}}</small></li>{{/payload.commits}}</ul>                <small class="gha-message-commits">{{{commitsMessage}}}</small>',ReleaseEvent:'released {{{tagLink}}} at {{{repoLink}}}<br>{{{userGravatar}}}<small><span class="octicon octicon-cloud-download"></span>  {{{zipLink}}}</small>',WatchEvent:"starred {{{repoLink}}}"},icons={CommitCommentEvent:"comment-discussion",CreateEvent_repository:"repo-create",CreateEvent_tag:"tag-add",CreateEvent_branch:"git-branch-create",DeleteEvent:"repo-delete",FollowEvent:"person-follow",ForkEvent:"repo-forked",GistEvent:"gist",GollumEvent:"repo",IssuesEvent:"issue-opened",IssueCommentEvent:"comment-discussion",MemberEvent:"person",PublicEvent:"globe",PullRequestEvent:"git-pull-request",PullRequestReviewCommentEvent:"comment-discussion",PushEvent:"git-commit",ReleaseEvent:"tag-add",WatchEvent:"star"},singleLineActivities=["CreateEvent","DeleteEvent","FollowEvent","ForkEvent","GistEvent","MemberEvent","WatchEvent"];